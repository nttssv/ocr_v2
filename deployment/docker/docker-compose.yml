version: '3.8'

services:
  ocr-api:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/ocr_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ../../data:/app/data
      - ../../logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped

  case-management-api:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/ocr_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ../../data:/app/data
      - ../../logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    command: ["uvicorn", "src.api.v1.case_management_api:app", "--host", "0.0.0.0", "--port", "8000"]

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=ocr_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../deployment/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../../logs/nginx:/var/log/nginx
    depends_on:
      - ocr-api
      - case-management-api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: ocr-network